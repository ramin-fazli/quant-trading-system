# Docker Compose for Trading System - Mirrors GCP VM Deployment
# Exactly matches the production deployment configuration

services:
  trading-system:
    build: .
    container_name: trading-system
    restart: unless-stopped
    ports:
      - "80:8050"    # Dashboard (matches GCP deployment port mapping)
      - "443:8050"   # HTTPS Dashboard (matches GCP deployment)
      - "8080:8080"  # API (matches GCP deployment)
    environment:
      - TRADING_MODE=${TRADING_MODE:-live}
      - DATA_PROVIDER=${DATA_PROVIDER:-ctrader}
      - BROKER=${BROKER:-ctrader}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - PYTHONUNBUFFERED=1
      # Dashboard configuration (matches GCP deployment)
      - DASHBOARD_HOST=0.0.0.0
      - DASHBOARD_PORT=8050
      # InfluxDB connection (matches GCP deployment linking)
      - INFLUXDB_URL=http://influxdb:8086
      - TRADING_STATE_INFLUXDB_URL=http://influxdb:8086
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./backtest_reports:/app/backtest_reports
      - ./cache:/app/cache
      - ./pairs_config:/app/pairs_config  # Matches GCP deployment volume structure
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8050/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Resource limits matching GCP deployment
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '2.0'
    logging:
      driver: json-file
      options:
        max-size: "100m"  # Matches GCP deployment logging config
        max-file: "5"     # Matches GCP deployment logging config

  influxdb:
    image: influxdb:2.7-alpine  # Matches exact GCP deployment image
    container_name: influxdb
    restart: unless-stopped
    networks:
      - trading-network
    ports:
      - "8086:8086"
    environment:
      # Exact environment variables matching GCP deployment
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
      - influxdb-data:/var/lib/influxdb2    # Matches GCP deployment volume paths
      - influxdb-config:/etc/influxdb2      # Matches GCP deployment volume paths
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    # Resource limits matching GCP deployment
    deploy:
      resources:
        limits:
          memory: 512m  # Matches GCP deployment memory limit
          cpus: '1.0'   # Matches GCP deployment CPU limit
    logging:
      driver: json-file
      options:
        max-size: "50m"  # Matches GCP deployment logging config
        max-file: "3"    # Matches GCP deployment logging config

volumes:
  influxdb-data:
    driver: local
  influxdb-config:
    driver: local

# Use named network for proper container communication
networks:
  trading-network:
    driver: bridge
