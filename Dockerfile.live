FROM python:3.11-slim as base

# Set environment variables for Python optimization
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONPATH=/app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    gcc \
    g++ \
    make \
    libpq-dev \
    pkg-config \
    default-libmysqlclient-dev \
    build-essential \
    git \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create app user
RUN groupadd -r app -g 1000 && useradd -r -g app -u 1000 -m -s /bin/bash app

WORKDIR /app

# Copy and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p logs backtest_reports data state_fallback cache config && \
    chown -R app:app /app && \
    chmod -R 755 /app

USER app

# Health check for live service
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8050/health || exit 1

EXPOSE 8050

# Live trading startup script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "ðŸš€ Starting Live Trading Service..."\n\
echo "Environment: ${TRADING_MODE:-live}"\n\
echo "Data Provider: ${DATA_PROVIDER:-ctrader}"\n\
echo "Broker: ${BROKER:-ctrader}"\n\
\n\
# Health check endpoint for Cloud Run\n\
python -c "from http.server import HTTPServer, BaseHTTPRequestHandler\n\
import threading, time\n\
class HealthHandler(BaseHTTPRequestHandler):\n\
    def do_GET(self):\n\
        if self.path == \"/health\":\n\
            self.send_response(200)\n\
            self.end_headers()\n\
            self.wfile.write(b\"OK\")\n\
        else:\n\
            self.send_response(404)\n\
            self.end_headers()\n\
server = HTTPServer((\"0.0.0.0\", 8080), HealthHandler)\n\
threading.Thread(target=server.serve_forever, daemon=True).start()\n\
print(\"Health endpoint started on :8080\")" &\n\
\n\
# Start the main trading application\n\
exec python -m scripts.pair_trading.main --mode live --data-provider ${DATA_PROVIDER:-ctrader} --broker ${BROKER:-ctrader}\n\
' > /app/entrypoint.live.sh && chmod +x /app/entrypoint.live.sh

ENTRYPOINT ["/app/entrypoint.live.sh"]